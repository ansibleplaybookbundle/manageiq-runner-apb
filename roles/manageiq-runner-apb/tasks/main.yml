- block:
  - name: Receive json map from parameter
    set_fact:
      map: "{{ data_map | from_json }}"

  - name: Create parameter string to send to CFME
    set_fact:
      cfme_json: ""

  - name: Update parameter string with boolean values
    set_fact:
      cfme_json: '{{ cfme_json }}, "{{ item }}": "t"'
    with_items: "{{ map.cfme_params }}"
    when:
    - vars[item] is defined
    - vars[item] | bool
    - vars[item]

  - name: Update parameter string with enum values
    include_tasks: fix_enum_values.yml
    with_items: "{{ map.cfme_params }}"

  - name: Update parameter string with all other values
    set_fact:
      cfme_json: '{{ cfme_json }}, "{{ item }}": "{{ vars[item] }}"'
    with_items: "{{ map.cfme_params }}"
    when:
    - vars[item] is defined
    - not(vars[item] | bool)
    - not(vars['map'][item] is defined)
    - vars[item]

  - name: Set service template url
    set_fact:
      url: "{{ cfme_url }}/api/service_catalogs/{{ map.catalog_id }}/service_templates"

  - name: Set initial request body
    set_fact:
      body: |
            { "action": "order",
              "resource": {
                "href" : "{{ cfme_url }}/api/service_templates/{{ map.template_id }}" {{ cfme_json }} }
            }

  - name: Update request body
    set_fact:
      body: |
            { "action": "order",
              "resource": {
                "href" : "{{ cfme_url }}/api/service_templates/{{ map.template_id }}" {{ cfme_json }},
                "existing_project_name": "{{ namespace }}" }
            }
    when: map.type == "ServiceTemplateContainerTemplate"

  - name: Send request
    uri:
      url: "{{ url }}"
      method: POST
      validate_certs: no
      user: "{{ cfme_user }}"
      password: "{{ cfme_password }}"
      body_format: json
      body: "{{ body }}"
    register: service

  - name: process config map
    k8s_v1_config_map:
      state: "{{ state }}"
      namespace: "{{ namespace }}"
      name: "{{ _apb_service_instance_id }}"
      data:
        cfmeServiceId: "{{ service.json.results[0].id }}"
  when: state == "present"

- block:
  - k8s_v1_config_map:
      namespace: "{{ namespace }}"
      name: "{{ _apb_service_instance_id }}"
    register: service

  - name: Set service template url
    set_fact:
      url: "{{ cfme_url }}/api/services/{{ service.config_map.data.cfmeServiceId }}"

  - name: Set request body
    set_fact:
      body: { "action": "retire" }

  - name: Send request
    uri:
      url: "{{ url }}"
      method: POST
      validate_certs: no
      user: "{{ cfme_user }}"
      password: "{{ cfme_password }}"
      body_format: json
      body: "{{ body }}"

  - name: process config map
    k8s_v1_config_map:
      state: "{{ state }}"
      namespace: "{{ namespace }}"
      name: "{{ _apb_service_instance_id }}"
  when: state == "absent"

# Helpful for debugging failed requests.
- debug:
    msg: "{{ body }}"
